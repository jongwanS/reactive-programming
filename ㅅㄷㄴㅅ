# Webflux 도입 필요성
#### 리액티브 프로그래밍
  - 비동기 & 이벤트 기반 패러다임

#### 리액티브 프로그래밍의 필요성
- 비동기 & 논블로킹 지원
- 쓰레드 풀의 딜레마
  - 쓰레드를 무조건 늘린다고 문제 해결불가
    - 컨텍스트 스위칭비용 발생
- 시스템 자원을 효율적 사용
  - 논블로킹 → 시스템 자원 반환

#### Reactive Streams
- 비동기 이벤트 기반의 프로그래밍을 위한 표준을 정의한 인터페이스
- 인터페이스 구현체 ( Reactor, Rxjava, Akka)
  - 발행-구독(Publish-Subscribe) 매커니즘
